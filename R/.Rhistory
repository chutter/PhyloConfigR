delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
#DATA TRANSFORMATIONS HERE
data.df$dNdS = (data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = data.df$climate
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$Precip_annual_mean)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = data.df$climate
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data
spp.data = read.csv("/Users/chutter/Dropbox/Research/1_Main-Projects/0_Working-Projects/Rodent_adaptation/Datasets/Pseudomys_division_data.csv")
missing.samples = time.tree$tip.label[!time.tree$tip.label %in% spp.data$Sample]
species.tree = drop.tip(time.tree, missing.samples)
species.data = spp.data[spp.data$Sample %in% species.tree$tip.label,]
slac.data = red.data[!red.data$label %in% missing.samples,]
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$mass_norm)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = data.df$dNdS
data.df$climate = data.df$climate
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$mass_scaled)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = data.df$dNdS
data.df$climate = data.df$climate
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
result
plot(data.df$dNdS~data.df$climate)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$mass_scaled)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$mass)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
vector.data
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$Elevation)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$Elevation)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = (data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
newdata = data.frame(SVL = pgls.data$SVL)
predictions = predict(model, newdata)
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$Elevation)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = (data.df$dNdS)
data.df$climate = data.df$climate
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$l_el)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = (data.df$dNdS)
data.df$climate = data.df$climate
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
spp.data = read.csv("/Users/chutter/Dropbox/Research/1_Main-Projects/0_Working-Projects/Rodent_adaptation/Datasets/Pseudomys_division_data.csv")
missing.samples = time.tree$tip.label[!time.tree$tip.label %in% spp.data$Sample]
species.tree = drop.tip(time.tree, missing.samples)
species.data = spp.data[spp.data$Sample %in% species.tree$tip.label,]
slac.data = red.data[!red.data$label %in% missing.samples,]
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$mass_scaled)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data = merge(species.data, slac.data, by.x = "Sample", by.y = "label")
data.df = data.frame(Species = combined.data$Sample,
dNdS = combined.data$dNdS,
climate = combined.data$mass_scaled)
#DATA TRANSFORMATIONS HERE
data.df$dNdS = log10(data.df$dNdS)
data.df$climate = log10(data.df$climate)
#First test correlation
result = cor.test(data.df$dNdS, data.df$climate, method = "spearman")
plot(data.df$dNdS~data.df$climate)
#Makes data ready for PGLS
pgls.data = data.frame(data.df$dNdS, data.df$climate)
rownames(pgls.data) = data.df$Species
colnames(pgls.data) = c("dNdS", "climate")
vector.data = pgls.data$dNdS
names(vector.data) = rownames(pgls.data)
#Tests the models
iters = 1000
BM = fitContinuous(species.tree, dat = vector.data, model = c("BM"), control = list(method = "subplex"))
L = fitContinuous(species.tree, dat = vector.data, model = c("lambda"), bounds = list(lambda = c(0,1), sigsq = c(1e-10,100000000)), control = list(method = "subplex", niter = iters))
OU = fitContinuous(species.tree, dat = vector.data, model = c("OU"), control = list(method = "subplex", niter = iters))
W = fitContinuous(species.tree, dat = vector.data, model = c("white"), control = list(method = "subplex", niter = iters))
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
#Makes data table
model = c("BM", "lambda", "OU", "WN")
aicc = c(BM$opt$aicc, L$opt$aicc, OU$opt$aicc, W$opt$aicc)
k = c(BM$opt$k, L$opt$k, OU$opt$k, W$opt$k)
parameter = c(BM$opt$sigsq, L$opt$lambda, OU$opt$alpha, W$opt$sigsq)
delta = c(aicc-aicc[which(aicc==min(aicc))])
data.table = data.frame(model, aicc, k, parameter, delta)
best.m = data.table[1,]
best.m
data.table
best.m = data.table[3,]
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = dNdS ~ climate, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
combined.data
summary(model)
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = climate ~ dNdS, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$dNdS, predict(model))^2
summary(model)
R2
R2 = cor(pgls.data$climate, predict(model))^2
summary(model)
R2
#Tests for relationship using best model of trait evolution
model = nlme::gls(model = climate ~ dNdS, data = pgls.data, method = "ML", correlation = corBrownian(phy = species.tree, value= best.m$parameter))
R2 = cor(pgls.data$climate, predict(model))^2
summary(model)
R2
